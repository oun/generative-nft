import { ethers } from "ethers";
import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import useConfig from "../hooks/useconfig";

const Home: NextPage = () => {
  const [account, setAccount] = useState();
  const { config, error } = useConfig();

  const connectWallet = async () => {
    try {
      if (!window.ethereum) {
        console.log("Metamask not detected");
        return;
      }
      let chainId = await window.ethereum.request({ method: "eth_chainId" });
      console.log("Connected to chain:" + chainId);

      const rinkebyChainId = "0x4";
      const devChainId = 1337;
      const localChainId = `0x${devChainId.toString(16)}`;

      if (chainId !== rinkebyChainId && chainId !== localChainId) {
        alert("You are not connected to the Rinkeby Testnet!");
        return;
      }

      const [account] = await window.ethereum.request({
        method: "eth_requestAccounts",
      });

      console.log("Found account", account);
      setAccount(account);
    } catch (error) {
      console.log("Error connecting to Wallet");
    }
  };

  const mint = async () => {
    try {
      if (!window.ethereum) {
        console.log("Metamask not detected");
        return;
      }
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(
        config.contract.address,
        config.contract.abi,
        signer
      );
      const tx = await contract.mintTo(account, 1, {
        value: ethers.utils.parseEther("0.02"),
      });
      console.log("Mining....", tx.hash);
      const receipt = await tx.wait();
      console.log("Mined!", receipt);
      const event = receipt.events[0];
      const value = event.args[2];
      const tokenId = value.toNumber();
      console.log(
        `Mined, see transaction: https://rinkeby.etherscan.io/tx/${tx.hash}`
      );
    } catch (error) {
      console.log("Error minting", error);
    }
  };

  return (
    <div className="container mx-auto min-h-screen flex flex-col">
      <Head>
        <title>NFT</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="flex p-4">
        <div className="text-lg justify-center items-center text-white">
          NFT Logo
        </div>
        <nav className="text-lg flex grow justify-end items-center gap-4 text-white">
          <a href="#">About</a>
          <a href="#">Collection</a>
          <a href="#">Team</a>
        </nav>
      </header>

      <main className="flex grow">
        <section className="flex flex-col items-center justify-center w-full">
          <h1 className="text-5xl text-white p-2">Welcome to NFT</h1>
          <div className="text-lg text-white p-4 w-1/3 text-center">
            5,555 unique collectible with proof of ownership stored on the
            Ethereum blockchain.
          </div>
          <div className="m-4">
            {account ? (
              <button
                className="text-lg bg-white py-4 px-8 rounded-xl"
                onClick={mint}
              >
                Buy NFT
              </button>
            ) : (
              <button
                className="text-lg bg-white p-4 rounded-xl"
                onClick={connectWallet}
              >
                Connect Wallet
              </button>
            )}
          </div>
        </section>
      </main>
    </div>
  );
};

export default Home;
